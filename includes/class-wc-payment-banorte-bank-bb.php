<?php
/**
 * Created by PhpStorm.
 * User: smp
 * Date: 30/07/18
 * Time: 11:43 AM
 */

class WC_Payment_Banorte_Bank_BB extends WC_Payment_Gateway
{
    /**
     * @var string
     */
    public $url_payment;

    public function __construct()
    {
        $this->id = 'banorte_bank';
        $this->icon = banorte_bank_bb()->plugin_url . 'assets/images/banorte.png';
        $this->method_title = __('Banorte', 'woo-banorte');
        //Pagos con tarjetas de crÃ©dito, dÃ©bito VISA y Mastercard a travÃ©s de banorte
        $this->method_description = __('Payments with credit cards, VISA and Mastercard debit through banorte.', 'woo-banorte');
        $this->description  = $this->get_option( 'description' );
        $this->order_button_text = __('Continue to payment', 'woo-banorte');
        $this->has_fields = false;
        $this->supports = array('products');
        $this->init_form_fields();
        $this->init_settings();
        $this->title = $this->get_option('title');
        $this->url_payment = 'https://via.pagosbanorte.com/payw2';
        add_action('woocommerce_update_options_payment_gateways_' . $this->id, array($this, 'process_admin_options'));
        add_action('woocommerce_receipt_' . $this->id, array(&$this, 'receipt_page'));
        add_filter('woocommerce_thankyou_order_received_text', array($this, 'order_received_message'), 10, 2 );
        add_action('woocommerce_available_payment_gateways', array(&$this, 'disable_payment_if_options_empty'), 20);
    }

    public function init_form_fields()
    {
        $this->form_fields = array(
            'enabled' => array(
                'title' => __('Enable/Disable', 'woo-banorte'),
                'type' => 'checkbox',
                'label' => __('Enable Banorte', 'woo-banorte'),
                'default' => 'no'
            ),
            'title' => array(
                'title' => __('Title', 'woo-banorte'),
                'type' => 'text',
                'description' => __('It corresponds to the title that the user sees during the checkout', 'woo-banorte'),
                'default' => __('Banorte Woocommerce', 'woo-banorte'),
                'desc_tip' => true,
            ),
            'description' => array(
                'title' => __('Description', 'woo-banorte'),
                'type' => 'textarea',
                'description' => __('It corresponds to the description that the user will see during the checkout', 'woo-banorte'),
                'default' => __('Payments with credit cards, VISA and Mastercard debit through banorte', 'woo-banorte'),
                'desc_tip' => true,
            ),
            'merchant_id' => array(
                'title' => __('MERCHANT_ID', 'woo-banorte'),
                'type'        => 'number',
                'description' => __('Affiliation number assigned by Banorte to identify the client', 'woo-banorte'),
                'desc_tip' => true,
                'default' => '',
            ),
            'user' => array(
                'title' => __('USER', 'woo-banorte'),
                'type'        => 'text',
                'description' => __('User generated by Banorte used by the client to execute each of the transactions', 'woo-banorte'),
                'desc_tip' => true,
                'default' => '',
            ),
            'password' => array(
                'title' => __('PASSWORD', 'woo-banorte'),
                'type' => 'text',
                'description' => __('Password of the user with whom the transaction is executed', 'woo-banorte'),
                'default' => '',
                'desc_tip' => true,
                'placeholder' => ''
            ),
            'terminal_id' => array(
                'title' => __('TERMINAL_ID', 'woo-banorte'),
                'type' => 'text',
                'description' => __('The point of sale identifier or terminal on which the transaction is executed. The specified identifier must exist in the Payworks database, which will normally be done when registering an affiliation', 'woo-banorte'),
                'default' => '',
                'desc_tip' => true,
                'placeholder' => ''
            ),
            'environment' => array(
                'title' => __('Environment', 'woo-banorte'),
                'type'        => 'select',
                'class'       => 'wc-enhanced-select',
                'description' => __('Enable to run tests', 'woo-banorte'),
                'desc_tip' => true,
                'default' => 'AUT',
                'options'     => array(
                    'PRD'    => __( 'Production mode', 'woo-banorte' ),
                    'AUT' => __( 'Test mode always authorizing', 'woo-banorte' ),
                    'DEC' => __( 'Test mode always declining', 'woo-banorte' ),
                    'RND' => __( 'Test mode with random authorization', 'woo-banorte' )
                ),
            ),
        );
    }

    public function admin_options()
    {
        ?>
        <h3><?php echo $this->title; ?></h3>
        <p><?php echo $this->method_description; ?></p>
        <table class="form-table">
            <?php
            $this->check_options();
            $this->generate_settings_html();
            ?>
        </table>
        <?php
    }

    public function process_payment($order_id)
    {
        $order = wc_get_order( $order_id );
        $order->reduce_order_stock();
        WC()->cart->empty_cart();
        return array('result' => 'success', 'redirect' => $order->get_checkout_payment_url(true)
        );
    }

    /**
     * @param $order_id
     */
    public function receipt_page($order_id)
    {
        global $woocommerce;
        $order = new WC_Order($order_id);
        echo $this->generate_banorte_bank_form($order);
    }

    /**
     * @param $order
     */
    public function generate_banorte_bank_form($order){
        $date_new = strtotime ( '+2 year' , strtotime ( date('m/y') ) ) ;
        $date_new = date ( 'm/y' , $date_new );
        ?>
        <div id="card-banorte-bank-bb">
            <div class="overlay">
                <div class="overlay-text"></div>
            </div>
            <div class="msj-error-banorte">
                <ul class="woocommerce-error" role="alert">
                    <strong>
                        <li></li>
                    </strong>
                </ul>
            </div>
            <div class='card-wrapper'></div>
        <form id="banorte-bank" action="<?php echo $this->url_payment; ?>" method="POST">
            <label for="number" class="label"><?php echo __('Data of card','woo-banorte'); ?> *</label>
            <input type="hidden" name="MERCHANT_ID" value="<?php echo $this->get_option('merchant_id'); ?>">
            <input type="hidden" name="USER" value="<?php echo $this->get_option('user'); ?>">
            <input type="hidden" name="PASSWORD" value="<?php echo $this->get_option('password'); ?>">
            <input type="hidden" name="TERMINAL_ID" value="<?php echo $this->get_option('terminal_id'); ?>">
            <input type="hidden" name="CMD_TRANS" value="VENTA">
            <input type="hidden" name="MODE" value="<?php echo $this->get_option('environment'); ?>">
            <input type="hidden" name="ENTRY_MODE" value="MANUAL">
            <input type="hidden" name="RESPONSE_URL" value="<?php echo home_url('/'); ?>">
            <input type="hidden" name="RESPONSE_LANGUAGE" value="ES">
            <input type="hidden" name="AMOUNT" value="<?php echo $order->get_total(); ?>"/>
            <input type="hidden" name="CONTROL_NUMBER" value="<?php echo $order->get_id();?>"/>
            <div>

                <input type="text"  name="CARD_NUMBER" id="card_number" placeholder="<?php echo __('Card number','woo-banorte'); ?>" required/>
            </div>
            <div>
                <input type="text" name="name" placeholder="<?php echo __('Headline','woo-banorte'); ?>">
            </div>
            <div>
                <input type="text" name="CARD_EXP" id="card_exp" placeholder="<?php echo $date_new; ?>" required/>
            </div>
            <div>
                <input type="number" minlength="3" name="SECURITY_CODE" id="security_code" placeholder="CVV" required/>
            </div>
            <button type="submit"><?php echo __('Pay','woo-banorte');?></button>
        </form>
        </div>
        <?php
    }

    /**
     * @param $text
     * @param $order
     * @return string
     */
    public function order_received_message( $text, $order ) {
        if(!empty($_GET['msg'])){
            return $text .' '.$_GET['msg'];
        }
        return $text;
    }


    public function restore_order_stock($order_id)
    {
        $order = new WC_Order($order_id);
        if (!get_option('woocommerce_manage_stock') == 'yes' && !sizeof($order->get_items()) > 0) {
            return;
        }
        foreach ($order->get_items() as $item) {
            if ($item['product_id'] > 0) {
                $_product = $order->get_product_from_item($item);
                if ($_product && $_product->exists() && $_product->managing_stock()) {
                    $old_stock = $_product->stock;
                    $qty = apply_filters('woocommerce_order_item_quantity', $item['qty'], $this, $item);
                    $new_quantity = $_product->increase_stock($qty);
                    do_action('woocommerce_auto_stock_restored', $_product, $item);
                    $order->add_order_note(sprintf(__('Item #%s stock incremented from %s to %s.', 'woocommerce'), $item['product_id'], $old_stock, $new_quantity));
                    $order->send_stock_notifications($_product, $new_quantity, $item['qty']);
                }
            }
        }
    }


    public function disable_payment_if_options_empty($availableGateways)
    {
        if (!$this->get_is_valid_options())
        {
            if (isset($availableGateways[$this->id]))
            {
                unset($availableGateways[$this->id]);
            }
        }
        return $availableGateways;
    }

    public function check_options()
    {
        if (!$this->get_is_valid_options())
            do_action('notices_action_tag_banorte_bank_bb', __('Banorte Woocommerce: All fields are required','woo-banorte'));
    }

    public function get_is_valid_options()
    {
        if(empty($this->get_option('merchant_id')) || empty($this->get_option('user')) || empty($this->get_option('password')) || empty($this->get_option('terminal_id')))
            return false;
        return true;
    }
}